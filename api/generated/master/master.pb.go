// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.19.6
// source: api/proto/master.proto

package master

import (
	common "github.com/uttam-li/dfs/api/generated/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateEntryRequest_EntryType int32

const (
	CreateEntryRequest_FILE      CreateEntryRequest_EntryType = 0
	CreateEntryRequest_DIRECTORY CreateEntryRequest_EntryType = 1
	CreateEntryRequest_SYMLINK   CreateEntryRequest_EntryType = 2
)

// Enum value maps for CreateEntryRequest_EntryType.
var (
	CreateEntryRequest_EntryType_name = map[int32]string{
		0: "FILE",
		1: "DIRECTORY",
		2: "SYMLINK",
	}
	CreateEntryRequest_EntryType_value = map[string]int32{
		"FILE":      0,
		"DIRECTORY": 1,
		"SYMLINK":   2,
	}
)

func (x CreateEntryRequest_EntryType) Enum() *CreateEntryRequest_EntryType {
	p := new(CreateEntryRequest_EntryType)
	*p = x
	return p
}

func (x CreateEntryRequest_EntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateEntryRequest_EntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_master_proto_enumTypes[0].Descriptor()
}

func (CreateEntryRequest_EntryType) Type() protoreflect.EnumType {
	return &file_api_proto_master_proto_enumTypes[0]
}

func (x CreateEntryRequest_EntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateEntryRequest_EntryType.Descriptor instead.
func (CreateEntryRequest_EntryType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{5, 0}
}

type Inode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ino           uint64                 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	Attributes    *common.FileAttributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Xattrs        map[string][]byte      `protobuf:"bytes,3,rep,name=xattrs,proto3" json:"xattrs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ChunkHandles  map[uint64]string      `protobuf:"bytes,4,rep,name=chunk_handles,json=chunkHandles,proto3" json:"chunk_handles,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Inode) Reset() {
	*x = Inode{}
	mi := &file_api_proto_master_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Inode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inode) ProtoMessage() {}

func (x *Inode) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inode.ProtoReflect.Descriptor instead.
func (*Inode) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{0}
}

func (x *Inode) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *Inode) GetAttributes() *common.FileAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Inode) GetXattrs() map[string][]byte {
	if x != nil {
		return x.Xattrs
	}
	return nil
}

func (x *Inode) GetChunkHandles() map[uint64]string {
	if x != nil {
		return x.ChunkHandles
	}
	return nil
}

// Simple lookup instead of batch
type LookupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentIno     uint64                 `protobuf:"varint,1,opt,name=parent_ino,json=parentIno,proto3" json:"parent_ino,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupRequest) Reset() {
	*x = LookupRequest{}
	mi := &file_api_proto_master_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupRequest) ProtoMessage() {}

func (x *LookupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupRequest.ProtoReflect.Descriptor instead.
func (*LookupRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{1}
}

func (x *LookupRequest) GetParentIno() uint64 {
	if x != nil {
		return x.ParentIno
	}
	return 0
}

func (x *LookupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LookupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inode         *Inode                 `protobuf:"bytes,1,opt,name=inode,proto3" json:"inode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupResponse) Reset() {
	*x = LookupResponse{}
	mi := &file_api_proto_master_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupResponse) ProtoMessage() {}

func (x *LookupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupResponse.ProtoReflect.Descriptor instead.
func (*LookupResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{2}
}

func (x *LookupResponse) GetInode() *Inode {
	if x != nil {
		return x.Inode
	}
	return nil
}

type GetAttributesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inode         uint64                 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	AttributeMask uint32                 `protobuf:"varint,2,opt,name=attribute_mask,json=attributeMask,proto3" json:"attribute_mask,omitempty"` // Bitmask for requested attributes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttributesRequest) Reset() {
	*x = GetAttributesRequest{}
	mi := &file_api_proto_master_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttributesRequest) ProtoMessage() {}

func (x *GetAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttributesRequest.ProtoReflect.Descriptor instead.
func (*GetAttributesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{3}
}

func (x *GetAttributesRequest) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *GetAttributesRequest) GetAttributeMask() uint32 {
	if x != nil {
		return x.AttributeMask
	}
	return 0
}

type GetAttributesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inode         *Inode                 `protobuf:"bytes,1,opt,name=inode,proto3" json:"inode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttributesResponse) Reset() {
	*x = GetAttributesResponse{}
	mi := &file_api_proto_master_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttributesResponse) ProtoMessage() {}

func (x *GetAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttributesResponse.ProtoReflect.Descriptor instead.
func (*GetAttributesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{4}
}

func (x *GetAttributesResponse) GetInode() *Inode {
	if x != nil {
		return x.Inode
	}
	return nil
}

type CreateEntryRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	ParentIno     uint64                       `protobuf:"varint,1,opt,name=parent_ino,json=parentIno,proto3" json:"parent_ino,omitempty"`
	Name          string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          CreateEntryRequest_EntryType `protobuf:"varint,3,opt,name=type,proto3,enum=dfs.CreateEntryRequest_EntryType" json:"type,omitempty"`
	Attributes    *common.FileAttributes       `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
	SymlinkTarget string                       `protobuf:"bytes,5,opt,name=symlink_target,json=symlinkTarget,proto3" json:"symlink_target,omitempty"` // Only for symlinks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEntryRequest) Reset() {
	*x = CreateEntryRequest{}
	mi := &file_api_proto_master_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntryRequest) ProtoMessage() {}

func (x *CreateEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{5}
}

func (x *CreateEntryRequest) GetParentIno() uint64 {
	if x != nil {
		return x.ParentIno
	}
	return 0
}

func (x *CreateEntryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEntryRequest) GetType() CreateEntryRequest_EntryType {
	if x != nil {
		return x.Type
	}
	return CreateEntryRequest_FILE
}

func (x *CreateEntryRequest) GetAttributes() *common.FileAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CreateEntryRequest) GetSymlinkTarget() string {
	if x != nil {
		return x.SymlinkTarget
	}
	return ""
}

type CreateEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inode         *Inode                 `protobuf:"bytes,1,opt,name=inode,proto3" json:"inode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEntryResponse) Reset() {
	*x = CreateEntryResponse{}
	mi := &file_api_proto_master_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntryResponse) ProtoMessage() {}

func (x *CreateEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntryResponse.ProtoReflect.Descriptor instead.
func (*CreateEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{6}
}

func (x *CreateEntryResponse) GetInode() *Inode {
	if x != nil {
		return x.Inode
	}
	return nil
}

type AllocateChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileIno       uint64                 `protobuf:"varint,1,opt,name=file_ino,json=fileIno,proto3" json:"file_ino,omitempty"`
	ChunkIndex    uint64                 `protobuf:"varint,2,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllocateChunkRequest) Reset() {
	*x = AllocateChunkRequest{}
	mi := &file_api_proto_master_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocateChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateChunkRequest) ProtoMessage() {}

func (x *AllocateChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateChunkRequest.ProtoReflect.Descriptor instead.
func (*AllocateChunkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{7}
}

func (x *AllocateChunkRequest) GetFileIno() uint64 {
	if x != nil {
		return x.FileIno
	}
	return 0
}

func (x *AllocateChunkRequest) GetChunkIndex() uint64 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

type AllocateChunkResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	ChunkHandle   string                  `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	Locations     []*common.ChunkLocation `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations,omitempty"`
	LeaseExpiry   int64                   `protobuf:"varint,3,opt,name=lease_expiry,json=leaseExpiry,proto3" json:"lease_expiry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllocateChunkResponse) Reset() {
	*x = AllocateChunkResponse{}
	mi := &file_api_proto_master_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocateChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateChunkResponse) ProtoMessage() {}

func (x *AllocateChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateChunkResponse.ProtoReflect.Descriptor instead.
func (*AllocateChunkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{8}
}

func (x *AllocateChunkResponse) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

func (x *AllocateChunkResponse) GetLocations() []*common.ChunkLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *AllocateChunkResponse) GetLeaseExpiry() int64 {
	if x != nil {
		return x.LeaseExpiry
	}
	return 0
}

type GetChunkLocationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkHandles  []string               `protobuf:"bytes,1,rep,name=chunk_handles,json=chunkHandles,proto3" json:"chunk_handles,omitempty"` // Batch support
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunkLocationsRequest) Reset() {
	*x = GetChunkLocationsRequest{}
	mi := &file_api_proto_master_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunkLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkLocationsRequest) ProtoMessage() {}

func (x *GetChunkLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkLocationsRequest.ProtoReflect.Descriptor instead.
func (*GetChunkLocationsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{9}
}

func (x *GetChunkLocationsRequest) GetChunkHandles() []string {
	if x != nil {
		return x.ChunkHandles
	}
	return nil
}

type GetChunkLocationsResponse struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Chunks        []*GetChunkLocationsResponse_ChunkLocationInfo `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunkLocationsResponse) Reset() {
	*x = GetChunkLocationsResponse{}
	mi := &file_api_proto_master_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunkLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkLocationsResponse) ProtoMessage() {}

func (x *GetChunkLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkLocationsResponse.ProtoReflect.Descriptor instead.
func (*GetChunkLocationsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{10}
}

func (x *GetChunkLocationsResponse) GetChunks() []*GetChunkLocationsResponse_ChunkLocationInfo {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type SendHeartbeatRequest struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	ServerId      string                              `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Stats         *SendHeartbeatRequest_ServerStats   `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	ChunkReports  []*SendHeartbeatRequest_ChunkReport `protobuf:"bytes,3,rep,name=chunk_reports,json=chunkReports,proto3" json:"chunk_reports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendHeartbeatRequest) Reset() {
	*x = SendHeartbeatRequest{}
	mi := &file_api_proto_master_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendHeartbeatRequest) ProtoMessage() {}

func (x *SendHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*SendHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{11}
}

func (x *SendHeartbeatRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *SendHeartbeatRequest) GetStats() *SendHeartbeatRequest_ServerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *SendHeartbeatRequest) GetChunkReports() []*SendHeartbeatRequest_ChunkReport {
	if x != nil {
		return x.ChunkReports
	}
	return nil
}

type SendHeartbeatResponse struct {
	state                 protoimpl.MessageState                         `protogen:"open.v1"`
	ChunksToDelete        []string                                       `protobuf:"bytes,1,rep,name=chunks_to_delete,json=chunksToDelete,proto3" json:"chunks_to_delete,omitempty"`
	ReplicationOrders     []*SendHeartbeatResponse_ChunkReplicationOrder `protobuf:"bytes,2,rep,name=replication_orders,json=replicationOrders,proto3" json:"replication_orders,omitempty"`
	NextHeartbeatInterval int64                                          `protobuf:"varint,3,opt,name=next_heartbeat_interval,json=nextHeartbeatInterval,proto3" json:"next_heartbeat_interval,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SendHeartbeatResponse) Reset() {
	*x = SendHeartbeatResponse{}
	mi := &file_api_proto_master_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendHeartbeatResponse) ProtoMessage() {}

func (x *SendHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendHeartbeatResponse.ProtoReflect.Descriptor instead.
func (*SendHeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{12}
}

func (x *SendHeartbeatResponse) GetChunksToDelete() []string {
	if x != nil {
		return x.ChunksToDelete
	}
	return nil
}

func (x *SendHeartbeatResponse) GetReplicationOrders() []*SendHeartbeatResponse_ChunkReplicationOrder {
	if x != nil {
		return x.ReplicationOrders
	}
	return nil
}

func (x *SendHeartbeatResponse) GetNextHeartbeatInterval() int64 {
	if x != nil {
		return x.NextHeartbeatInterval
	}
	return 0
}

type SetAttributesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ino           uint64                 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	Attributes    *common.FileAttributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	AttributeMask uint32                 `protobuf:"varint,3,opt,name=attribute_mask,json=attributeMask,proto3" json:"attribute_mask,omitempty"` // Bitmask for which attributes to update
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAttributesRequest) Reset() {
	*x = SetAttributesRequest{}
	mi := &file_api_proto_master_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttributesRequest) ProtoMessage() {}

func (x *SetAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttributesRequest.ProtoReflect.Descriptor instead.
func (*SetAttributesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{13}
}

func (x *SetAttributesRequest) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *SetAttributesRequest) GetAttributes() *common.FileAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *SetAttributesRequest) GetAttributeMask() uint32 {
	if x != nil {
		return x.AttributeMask
	}
	return 0
}

type SetAttributesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewAttributes *common.FileAttributes `protobuf:"bytes,1,opt,name=new_attributes,json=newAttributes,proto3" json:"new_attributes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAttributesResponse) Reset() {
	*x = SetAttributesResponse{}
	mi := &file_api_proto_master_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttributesResponse) ProtoMessage() {}

func (x *SetAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttributesResponse.ProtoReflect.Descriptor instead.
func (*SetAttributesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{14}
}

func (x *SetAttributesResponse) GetNewAttributes() *common.FileAttributes {
	if x != nil {
		return x.NewAttributes
	}
	return nil
}

type DeleteEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentIno     uint64                 `protobuf:"varint,1,opt,name=parent_ino,json=parentIno,proto3" json:"parent_ino,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Recursive     bool                   `protobuf:"varint,3,opt,name=recursive,proto3" json:"recursive,omitempty"` // For directory deletion
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEntryRequest) Reset() {
	*x = DeleteEntryRequest{}
	mi := &file_api_proto_master_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntryRequest) ProtoMessage() {}

func (x *DeleteEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntryRequest.ProtoReflect.Descriptor instead.
func (*DeleteEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteEntryRequest) GetParentIno() uint64 {
	if x != nil {
		return x.ParentIno
	}
	return 0
}

func (x *DeleteEntryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteEntryRequest) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

type DeleteEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeletedIno    uint64                 `protobuf:"varint,1,opt,name=deleted_ino,json=deletedIno,proto3" json:"deleted_ino,omitempty"`
	FreedChunks   []string               `protobuf:"bytes,2,rep,name=freed_chunks,json=freedChunks,proto3" json:"freed_chunks,omitempty"` // Chunks that need cleanup
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEntryResponse) Reset() {
	*x = DeleteEntryResponse{}
	mi := &file_api_proto_master_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntryResponse) ProtoMessage() {}

func (x *DeleteEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntryResponse.ProtoReflect.Descriptor instead.
func (*DeleteEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteEntryResponse) GetDeletedIno() uint64 {
	if x != nil {
		return x.DeletedIno
	}
	return 0
}

func (x *DeleteEntryResponse) GetFreedChunks() []string {
	if x != nil {
		return x.FreedChunks
	}
	return nil
}

type ListDirectoryRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DirIno            uint64                 `protobuf:"varint,1,opt,name=dir_ino,json=dirIno,proto3" json:"dir_ino,omitempty"`
	ContinuationToken string                 `protobuf:"bytes,2,opt,name=continuation_token,json=continuationToken,proto3" json:"continuation_token,omitempty"` // For pagination
	MaxEntries        uint32                 `protobuf:"varint,3,opt,name=max_entries,json=maxEntries,proto3" json:"max_entries,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListDirectoryRequest) Reset() {
	*x = ListDirectoryRequest{}
	mi := &file_api_proto_master_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryRequest) ProtoMessage() {}

func (x *ListDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{17}
}

func (x *ListDirectoryRequest) GetDirIno() uint64 {
	if x != nil {
		return x.DirIno
	}
	return 0
}

func (x *ListDirectoryRequest) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

func (x *ListDirectoryRequest) GetMaxEntries() uint32 {
	if x != nil {
		return x.MaxEntries
	}
	return 0
}

type ListDirectoryResponse struct {
	state                 protoimpl.MessageState                  `protogen:"open.v1"`
	Entries               []*ListDirectoryResponse_DirectoryEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	NextContinuationToken string                                  `protobuf:"bytes,2,opt,name=next_continuation_token,json=nextContinuationToken,proto3" json:"next_continuation_token,omitempty"`
	HasMore               bool                                    `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListDirectoryResponse) Reset() {
	*x = ListDirectoryResponse{}
	mi := &file_api_proto_master_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryResponse) ProtoMessage() {}

func (x *ListDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{18}
}

func (x *ListDirectoryResponse) GetEntries() []*ListDirectoryResponse_DirectoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *ListDirectoryResponse) GetNextContinuationToken() string {
	if x != nil {
		return x.NextContinuationToken
	}
	return ""
}

func (x *ListDirectoryResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type MoveEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OldParentIno  uint64                 `protobuf:"varint,1,opt,name=old_parent_ino,json=oldParentIno,proto3" json:"old_parent_ino,omitempty"`
	OldName       string                 `protobuf:"bytes,2,opt,name=old_name,json=oldName,proto3" json:"old_name,omitempty"`
	NewParentIno  uint64                 `protobuf:"varint,3,opt,name=new_parent_ino,json=newParentIno,proto3" json:"new_parent_ino,omitempty"`
	NewName       string                 `protobuf:"bytes,4,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveEntryRequest) Reset() {
	*x = MoveEntryRequest{}
	mi := &file_api_proto_master_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveEntryRequest) ProtoMessage() {}

func (x *MoveEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveEntryRequest.ProtoReflect.Descriptor instead.
func (*MoveEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{19}
}

func (x *MoveEntryRequest) GetOldParentIno() uint64 {
	if x != nil {
		return x.OldParentIno
	}
	return 0
}

func (x *MoveEntryRequest) GetOldName() string {
	if x != nil {
		return x.OldName
	}
	return ""
}

func (x *MoveEntryRequest) GetNewParentIno() uint64 {
	if x != nil {
		return x.NewParentIno
	}
	return 0
}

func (x *MoveEntryRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type MoveEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UpdatedInode  *Inode                 `protobuf:"bytes,1,opt,name=updated_inode,json=updatedInode,proto3" json:"updated_inode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveEntryResponse) Reset() {
	*x = MoveEntryResponse{}
	mi := &file_api_proto_master_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveEntryResponse) ProtoMessage() {}

func (x *MoveEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveEntryResponse.ProtoReflect.Descriptor instead.
func (*MoveEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{20}
}

func (x *MoveEntryResponse) GetUpdatedInode() *Inode {
	if x != nil {
		return x.UpdatedInode
	}
	return nil
}

type RegisterChunkServerRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServerId       string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Address        string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	TotalSpace     uint64                 `protobuf:"varint,3,opt,name=total_space,json=totalSpace,proto3" json:"total_space,omitempty"`
	ExistingChunks []string               `protobuf:"bytes,4,rep,name=existing_chunks,json=existingChunks,proto3" json:"existing_chunks,omitempty"` // For restart recovery
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterChunkServerRequest) Reset() {
	*x = RegisterChunkServerRequest{}
	mi := &file_api_proto_master_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterChunkServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterChunkServerRequest) ProtoMessage() {}

func (x *RegisterChunkServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterChunkServerRequest.ProtoReflect.Descriptor instead.
func (*RegisterChunkServerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{21}
}

func (x *RegisterChunkServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *RegisterChunkServerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterChunkServerRequest) GetTotalSpace() uint64 {
	if x != nil {
		return x.TotalSpace
	}
	return 0
}

func (x *RegisterChunkServerRequest) GetExistingChunks() []string {
	if x != nil {
		return x.ExistingChunks
	}
	return nil
}

type RegisterChunkServerResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	HeartbeatInterval int64                  `protobuf:"varint,1,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	ChunksToDelete    []string               `protobuf:"bytes,2,rep,name=chunks_to_delete,json=chunksToDelete,proto3" json:"chunks_to_delete,omitempty"`       // Cleanup from previous session
	AssignedServerId  string                 `protobuf:"bytes,3,opt,name=assigned_server_id,json=assignedServerId,proto3" json:"assigned_server_id,omitempty"` // In case server_id was modified
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterChunkServerResponse) Reset() {
	*x = RegisterChunkServerResponse{}
	mi := &file_api_proto_master_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterChunkServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterChunkServerResponse) ProtoMessage() {}

func (x *RegisterChunkServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterChunkServerResponse.ProtoReflect.Descriptor instead.
func (*RegisterChunkServerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{22}
}

func (x *RegisterChunkServerResponse) GetHeartbeatInterval() int64 {
	if x != nil {
		return x.HeartbeatInterval
	}
	return 0
}

func (x *RegisterChunkServerResponse) GetChunksToDelete() []string {
	if x != nil {
		return x.ChunksToDelete
	}
	return nil
}

func (x *RegisterChunkServerResponse) GetAssignedServerId() string {
	if x != nil {
		return x.AssignedServerId
	}
	return ""
}

type GetSystemStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSystemStatsRequest) Reset() {
	*x = GetSystemStatsRequest{}
	mi := &file_api_proto_master_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemStatsRequest) ProtoMessage() {}

func (x *GetSystemStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemStatsRequest.ProtoReflect.Descriptor instead.
func (*GetSystemStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{23}
}

type GetSystemStatsResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Stats         *GetSystemStatsResponse_SystemStats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSystemStatsResponse) Reset() {
	*x = GetSystemStatsResponse{}
	mi := &file_api_proto_master_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemStatsResponse) ProtoMessage() {}

func (x *GetSystemStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemStatsResponse.ProtoReflect.Descriptor instead.
func (*GetSystemStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{24}
}

func (x *GetSystemStatsResponse) GetStats() *GetSystemStatsResponse_SystemStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type StatxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ino           uint64                 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	Mask          uint32                 `protobuf:"varint,2,opt,name=mask,proto3" json:"mask,omitempty"`   // STATX_* flags indicating which fields are requested
	Flags         uint32                 `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"` // AT_* flags
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatxRequest) Reset() {
	*x = StatxRequest{}
	mi := &file_api_proto_master_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatxRequest) ProtoMessage() {}

func (x *StatxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatxRequest.ProtoReflect.Descriptor instead.
func (*StatxRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{25}
}

func (x *StatxRequest) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *StatxRequest) GetMask() uint32 {
	if x != nil {
		return x.Mask
	}
	return 0
}

func (x *StatxRequest) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type StatxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Attributes    *StatxAttributes       `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Mask          uint32                 `protobuf:"varint,2,opt,name=mask,proto3" json:"mask,omitempty"` // STATX_* flags indicating which fields are valid
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatxResponse) Reset() {
	*x = StatxResponse{}
	mi := &file_api_proto_master_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatxResponse) ProtoMessage() {}

func (x *StatxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatxResponse.ProtoReflect.Descriptor instead.
func (*StatxResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{26}
}

func (x *StatxResponse) GetAttributes() *StatxAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *StatxResponse) GetMask() uint32 {
	if x != nil {
		return x.Mask
	}
	return 0
}

type StatxAttributes struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Mode      uint32                 `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`                             // File type and mode
	Uid       uint32                 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                               // User ID of owner
	Gid       uint32                 `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`                               // Group ID of owner
	Size      uint64                 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                             // Total size in bytes
	Blocks    uint64                 `protobuf:"varint,5,opt,name=blocks,proto3" json:"blocks,omitempty"`                         // Number of 512B blocks allocated
	Blksize   uint32                 `protobuf:"varint,6,opt,name=blksize,proto3" json:"blksize,omitempty"`                       // Block size for filesystem I/O
	Nlink     uint32                 `protobuf:"varint,7,opt,name=nlink,proto3" json:"nlink,omitempty"`                           // Number of hard links
	Ino       uint64                 `protobuf:"varint,8,opt,name=ino,proto3" json:"ino,omitempty"`                               // Inode number
	RdevMajor uint32                 `protobuf:"varint,9,opt,name=rdev_major,json=rdevMajor,proto3" json:"rdev_major,omitempty"`  // Device major ID (if special file)
	RdevMinor uint32                 `protobuf:"varint,10,opt,name=rdev_minor,json=rdevMinor,proto3" json:"rdev_minor,omitempty"` // Device minor ID (if special file)
	DevMajor  uint32                 `protobuf:"varint,11,opt,name=dev_major,json=devMajor,proto3" json:"dev_major,omitempty"`    // Device major ID containing file
	DevMinor  uint32                 `protobuf:"varint,12,opt,name=dev_minor,json=devMinor,proto3" json:"dev_minor,omitempty"`    // Device minor ID containing file
	// Timestamps with nanosecond precision
	Atime         *StatxTimestamp `protobuf:"bytes,13,opt,name=atime,proto3" json:"atime,omitempty"` // Last access time
	Mtime         *StatxTimestamp `protobuf:"bytes,14,opt,name=mtime,proto3" json:"mtime,omitempty"` // Last modification time
	Ctime         *StatxTimestamp `protobuf:"bytes,15,opt,name=ctime,proto3" json:"ctime,omitempty"` // Last status change time
	Btime         *StatxTimestamp `protobuf:"bytes,16,opt,name=btime,proto3" json:"btime,omitempty"` // Creation time (birth time)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatxAttributes) Reset() {
	*x = StatxAttributes{}
	mi := &file_api_proto_master_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatxAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatxAttributes) ProtoMessage() {}

func (x *StatxAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatxAttributes.ProtoReflect.Descriptor instead.
func (*StatxAttributes) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{27}
}

func (x *StatxAttributes) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *StatxAttributes) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *StatxAttributes) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *StatxAttributes) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *StatxAttributes) GetBlocks() uint64 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *StatxAttributes) GetBlksize() uint32 {
	if x != nil {
		return x.Blksize
	}
	return 0
}

func (x *StatxAttributes) GetNlink() uint32 {
	if x != nil {
		return x.Nlink
	}
	return 0
}

func (x *StatxAttributes) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *StatxAttributes) GetRdevMajor() uint32 {
	if x != nil {
		return x.RdevMajor
	}
	return 0
}

func (x *StatxAttributes) GetRdevMinor() uint32 {
	if x != nil {
		return x.RdevMinor
	}
	return 0
}

func (x *StatxAttributes) GetDevMajor() uint32 {
	if x != nil {
		return x.DevMajor
	}
	return 0
}

func (x *StatxAttributes) GetDevMinor() uint32 {
	if x != nil {
		return x.DevMinor
	}
	return 0
}

func (x *StatxAttributes) GetAtime() *StatxTimestamp {
	if x != nil {
		return x.Atime
	}
	return nil
}

func (x *StatxAttributes) GetMtime() *StatxTimestamp {
	if x != nil {
		return x.Mtime
	}
	return nil
}

func (x *StatxAttributes) GetCtime() *StatxTimestamp {
	if x != nil {
		return x.Ctime
	}
	return nil
}

func (x *StatxAttributes) GetBtime() *StatxTimestamp {
	if x != nil {
		return x.Btime
	}
	return nil
}

type StatxTimestamp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sec           int64                  `protobuf:"varint,1,opt,name=sec,proto3" json:"sec,omitempty"`   // Seconds since epoch
	Nsec          uint32                 `protobuf:"varint,2,opt,name=nsec,proto3" json:"nsec,omitempty"` // Nanoseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatxTimestamp) Reset() {
	*x = StatxTimestamp{}
	mi := &file_api_proto_master_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatxTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatxTimestamp) ProtoMessage() {}

func (x *StatxTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatxTimestamp.ProtoReflect.Descriptor instead.
func (*StatxTimestamp) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{28}
}

func (x *StatxTimestamp) GetSec() int64 {
	if x != nil {
		return x.Sec
	}
	return 0
}

func (x *StatxTimestamp) GetNsec() uint32 {
	if x != nil {
		return x.Nsec
	}
	return 0
}

// Extended Attributes Messages
type GetXAttrRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ino           uint64                 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetXAttrRequest) Reset() {
	*x = GetXAttrRequest{}
	mi := &file_api_proto_master_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetXAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetXAttrRequest) ProtoMessage() {}

func (x *GetXAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetXAttrRequest.ProtoReflect.Descriptor instead.
func (*GetXAttrRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{29}
}

func (x *GetXAttrRequest) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *GetXAttrRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetXAttrResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetXAttrResponse) Reset() {
	*x = GetXAttrResponse{}
	mi := &file_api_proto_master_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetXAttrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetXAttrResponse) ProtoMessage() {}

func (x *GetXAttrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetXAttrResponse.ProtoReflect.Descriptor instead.
func (*GetXAttrResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{30}
}

func (x *GetXAttrResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SetXAttrRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ino           uint64                 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value         []byte                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Flags         uint32                 `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"` // XATTR_CREATE, XATTR_REPLACE, etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetXAttrRequest) Reset() {
	*x = SetXAttrRequest{}
	mi := &file_api_proto_master_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetXAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetXAttrRequest) ProtoMessage() {}

func (x *SetXAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetXAttrRequest.ProtoReflect.Descriptor instead.
func (*SetXAttrRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{31}
}

func (x *SetXAttrRequest) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *SetXAttrRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetXAttrRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SetXAttrRequest) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type SetXAttrResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetXAttrResponse) Reset() {
	*x = SetXAttrResponse{}
	mi := &file_api_proto_master_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetXAttrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetXAttrResponse) ProtoMessage() {}

func (x *SetXAttrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetXAttrResponse.ProtoReflect.Descriptor instead.
func (*SetXAttrResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{32}
}

type ListXAttrRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ino           uint64                 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListXAttrRequest) Reset() {
	*x = ListXAttrRequest{}
	mi := &file_api_proto_master_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListXAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListXAttrRequest) ProtoMessage() {}

func (x *ListXAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListXAttrRequest.ProtoReflect.Descriptor instead.
func (*ListXAttrRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{33}
}

func (x *ListXAttrRequest) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

type ListXAttrResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListXAttrResponse) Reset() {
	*x = ListXAttrResponse{}
	mi := &file_api_proto_master_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListXAttrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListXAttrResponse) ProtoMessage() {}

func (x *ListXAttrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListXAttrResponse.ProtoReflect.Descriptor instead.
func (*ListXAttrResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{34}
}

func (x *ListXAttrResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type RemoveXAttrRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ino           uint64                 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveXAttrRequest) Reset() {
	*x = RemoveXAttrRequest{}
	mi := &file_api_proto_master_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveXAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveXAttrRequest) ProtoMessage() {}

func (x *RemoveXAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveXAttrRequest.ProtoReflect.Descriptor instead.
func (*RemoveXAttrRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{35}
}

func (x *RemoveXAttrRequest) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *RemoveXAttrRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveXAttrResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveXAttrResponse) Reset() {
	*x = RemoveXAttrResponse{}
	mi := &file_api_proto_master_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveXAttrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveXAttrResponse) ProtoMessage() {}

func (x *RemoveXAttrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveXAttrResponse.ProtoReflect.Descriptor instead.
func (*RemoveXAttrResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{36}
}

// Lease Management Messages
type GrantLeaseRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ChunkHandle      string                 `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	RequestingServer string                 `protobuf:"bytes,2,opt,name=requesting_server,json=requestingServer,proto3" json:"requesting_server,omitempty"`
	Replicas         []string               `protobuf:"bytes,3,rep,name=replicas,proto3" json:"replicas,omitempty"`
	Version          uint64                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GrantLeaseRequest) Reset() {
	*x = GrantLeaseRequest{}
	mi := &file_api_proto_master_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantLeaseRequest) ProtoMessage() {}

func (x *GrantLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantLeaseRequest.ProtoReflect.Descriptor instead.
func (*GrantLeaseRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{37}
}

func (x *GrantLeaseRequest) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

func (x *GrantLeaseRequest) GetRequestingServer() string {
	if x != nil {
		return x.RequestingServer
	}
	return ""
}

func (x *GrantLeaseRequest) GetReplicas() []string {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *GrantLeaseRequest) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GrantLeaseResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LeaseId        string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	Primary        string                 `protobuf:"bytes,2,opt,name=primary,proto3" json:"primary,omitempty"`
	ExpireTime     int64                  `protobuf:"varint,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`             // Unix timestamp
	RenewableAfter int64                  `protobuf:"varint,4,opt,name=renewable_after,json=renewableAfter,proto3" json:"renewable_after,omitempty"` // Unix timestamp
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GrantLeaseResponse) Reset() {
	*x = GrantLeaseResponse{}
	mi := &file_api_proto_master_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantLeaseResponse) ProtoMessage() {}

func (x *GrantLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantLeaseResponse.ProtoReflect.Descriptor instead.
func (*GrantLeaseResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{38}
}

func (x *GrantLeaseResponse) GetLeaseId() string {
	if x != nil {
		return x.LeaseId
	}
	return ""
}

func (x *GrantLeaseResponse) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *GrantLeaseResponse) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *GrantLeaseResponse) GetRenewableAfter() int64 {
	if x != nil {
		return x.RenewableAfter
	}
	return 0
}

type RenewLeaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkHandle   string                 `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	LeaseId       string                 `protobuf:"bytes,2,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	Primary       string                 `protobuf:"bytes,3,opt,name=primary,proto3" json:"primary,omitempty"`
	Version       uint64                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenewLeaseRequest) Reset() {
	*x = RenewLeaseRequest{}
	mi := &file_api_proto_master_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewLeaseRequest) ProtoMessage() {}

func (x *RenewLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewLeaseRequest.ProtoReflect.Descriptor instead.
func (*RenewLeaseRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{39}
}

func (x *RenewLeaseRequest) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

func (x *RenewLeaseRequest) GetLeaseId() string {
	if x != nil {
		return x.LeaseId
	}
	return ""
}

func (x *RenewLeaseRequest) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *RenewLeaseRequest) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type RenewLeaseResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LeaseId        string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	ExpireTime     int64                  `protobuf:"varint,2,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`             // Unix timestamp
	RenewableAfter int64                  `protobuf:"varint,3,opt,name=renewable_after,json=renewableAfter,proto3" json:"renewable_after,omitempty"` // Unix timestamp
	RenewalCount   int32                  `protobuf:"varint,4,opt,name=renewal_count,json=renewalCount,proto3" json:"renewal_count,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RenewLeaseResponse) Reset() {
	*x = RenewLeaseResponse{}
	mi := &file_api_proto_master_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewLeaseResponse) ProtoMessage() {}

func (x *RenewLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewLeaseResponse.ProtoReflect.Descriptor instead.
func (*RenewLeaseResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{40}
}

func (x *RenewLeaseResponse) GetLeaseId() string {
	if x != nil {
		return x.LeaseId
	}
	return ""
}

func (x *RenewLeaseResponse) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *RenewLeaseResponse) GetRenewableAfter() int64 {
	if x != nil {
		return x.RenewableAfter
	}
	return 0
}

func (x *RenewLeaseResponse) GetRenewalCount() int32 {
	if x != nil {
		return x.RenewalCount
	}
	return 0
}

type RevokeLeaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkHandle   string                 `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeLeaseRequest) Reset() {
	*x = RevokeLeaseRequest{}
	mi := &file_api_proto_master_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeLeaseRequest) ProtoMessage() {}

func (x *RevokeLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeLeaseRequest.ProtoReflect.Descriptor instead.
func (*RevokeLeaseRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{41}
}

func (x *RevokeLeaseRequest) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

func (x *RevokeLeaseRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RevokeLeaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeLeaseResponse) Reset() {
	*x = RevokeLeaseResponse{}
	mi := &file_api_proto_master_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeLeaseResponse) ProtoMessage() {}

func (x *RevokeLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeLeaseResponse.ProtoReflect.Descriptor instead.
func (*RevokeLeaseResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{42}
}

func (x *RevokeLeaseResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RevokeLeaseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetLeaseInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkHandle   string                 `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLeaseInfoRequest) Reset() {
	*x = GetLeaseInfoRequest{}
	mi := &file_api_proto_master_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeaseInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaseInfoRequest) ProtoMessage() {}

func (x *GetLeaseInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaseInfoRequest.ProtoReflect.Descriptor instead.
func (*GetLeaseInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{43}
}

func (x *GetLeaseInfoRequest) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

type GetLeaseInfoResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LeaseId        string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	Primary        string                 `protobuf:"bytes,2,opt,name=primary,proto3" json:"primary,omitempty"`
	Replicas       []string               `protobuf:"bytes,3,rep,name=replicas,proto3" json:"replicas,omitempty"`
	Version        uint64                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	GrantedAt      int64                  `protobuf:"varint,5,opt,name=granted_at,json=grantedAt,proto3" json:"granted_at,omitempty"`                // Unix timestamp
	ExpireTime     int64                  `protobuf:"varint,6,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`             // Unix timestamp
	RenewableAfter int64                  `protobuf:"varint,7,opt,name=renewable_after,json=renewableAfter,proto3" json:"renewable_after,omitempty"` // Unix timestamp
	State          string                 `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	RenewalCount   int32                  `protobuf:"varint,9,opt,name=renewal_count,json=renewalCount,proto3" json:"renewal_count,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetLeaseInfoResponse) Reset() {
	*x = GetLeaseInfoResponse{}
	mi := &file_api_proto_master_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeaseInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaseInfoResponse) ProtoMessage() {}

func (x *GetLeaseInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaseInfoResponse.ProtoReflect.Descriptor instead.
func (*GetLeaseInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{44}
}

func (x *GetLeaseInfoResponse) GetLeaseId() string {
	if x != nil {
		return x.LeaseId
	}
	return ""
}

func (x *GetLeaseInfoResponse) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *GetLeaseInfoResponse) GetReplicas() []string {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *GetLeaseInfoResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetLeaseInfoResponse) GetGrantedAt() int64 {
	if x != nil {
		return x.GrantedAt
	}
	return 0
}

func (x *GetLeaseInfoResponse) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *GetLeaseInfoResponse) GetRenewableAfter() int64 {
	if x != nil {
		return x.RenewableAfter
	}
	return 0
}

func (x *GetLeaseInfoResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetLeaseInfoResponse) GetRenewalCount() int32 {
	if x != nil {
		return x.RenewalCount
	}
	return 0
}

type GetChunkLocationsResponse_ChunkLocationInfo struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	ChunkHandle   string                  `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	Locations     []*common.ChunkLocation `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations,omitempty"`
	Version       uint32                  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Size          uint64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunkLocationsResponse_ChunkLocationInfo) Reset() {
	*x = GetChunkLocationsResponse_ChunkLocationInfo{}
	mi := &file_api_proto_master_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunkLocationsResponse_ChunkLocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkLocationsResponse_ChunkLocationInfo) ProtoMessage() {}

func (x *GetChunkLocationsResponse_ChunkLocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkLocationsResponse_ChunkLocationInfo.ProtoReflect.Descriptor instead.
func (*GetChunkLocationsResponse_ChunkLocationInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{10, 0}
}

func (x *GetChunkLocationsResponse_ChunkLocationInfo) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

func (x *GetChunkLocationsResponse_ChunkLocationInfo) GetLocations() []*common.ChunkLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *GetChunkLocationsResponse_ChunkLocationInfo) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetChunkLocationsResponse_ChunkLocationInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SendHeartbeatRequest_ServerStats struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalSpace        uint64                 `protobuf:"varint,1,opt,name=total_space,json=totalSpace,proto3" json:"total_space,omitempty"`
	UsedSpace         uint64                 `protobuf:"varint,2,opt,name=used_space,json=usedSpace,proto3" json:"used_space,omitempty"`
	AvailableSpace    uint64                 `protobuf:"varint,3,opt,name=available_space,json=availableSpace,proto3" json:"available_space,omitempty"`
	PendingDeletes    uint32                 `protobuf:"varint,4,opt,name=pending_deletes,json=pendingDeletes,proto3" json:"pending_deletes,omitempty"`
	ActiveConnections uint32                 `protobuf:"varint,5,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	CpuUsage          float64                `protobuf:"fixed64,6,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage       float64                `protobuf:"fixed64,7,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SendHeartbeatRequest_ServerStats) Reset() {
	*x = SendHeartbeatRequest_ServerStats{}
	mi := &file_api_proto_master_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendHeartbeatRequest_ServerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendHeartbeatRequest_ServerStats) ProtoMessage() {}

func (x *SendHeartbeatRequest_ServerStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendHeartbeatRequest_ServerStats.ProtoReflect.Descriptor instead.
func (*SendHeartbeatRequest_ServerStats) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{11, 0}
}

func (x *SendHeartbeatRequest_ServerStats) GetTotalSpace() uint64 {
	if x != nil {
		return x.TotalSpace
	}
	return 0
}

func (x *SendHeartbeatRequest_ServerStats) GetUsedSpace() uint64 {
	if x != nil {
		return x.UsedSpace
	}
	return 0
}

func (x *SendHeartbeatRequest_ServerStats) GetAvailableSpace() uint64 {
	if x != nil {
		return x.AvailableSpace
	}
	return 0
}

func (x *SendHeartbeatRequest_ServerStats) GetPendingDeletes() uint32 {
	if x != nil {
		return x.PendingDeletes
	}
	return 0
}

func (x *SendHeartbeatRequest_ServerStats) GetActiveConnections() uint32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *SendHeartbeatRequest_ServerStats) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *SendHeartbeatRequest_ServerStats) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

type SendHeartbeatRequest_ChunkReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkHandle   string                 `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	Version       uint32                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Size          uint64                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Checksum      []byte                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendHeartbeatRequest_ChunkReport) Reset() {
	*x = SendHeartbeatRequest_ChunkReport{}
	mi := &file_api_proto_master_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendHeartbeatRequest_ChunkReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendHeartbeatRequest_ChunkReport) ProtoMessage() {}

func (x *SendHeartbeatRequest_ChunkReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendHeartbeatRequest_ChunkReport.ProtoReflect.Descriptor instead.
func (*SendHeartbeatRequest_ChunkReport) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{11, 1}
}

func (x *SendHeartbeatRequest_ChunkReport) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

func (x *SendHeartbeatRequest_ChunkReport) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SendHeartbeatRequest_ChunkReport) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SendHeartbeatRequest_ChunkReport) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

type SendHeartbeatResponse_ChunkReplicationOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkHandle   string                 `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	TargetServers []string               `protobuf:"bytes,2,rep,name=target_servers,json=targetServers,proto3" json:"target_servers,omitempty"`
	Priority      uint32                 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"` // 0=highest
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendHeartbeatResponse_ChunkReplicationOrder) Reset() {
	*x = SendHeartbeatResponse_ChunkReplicationOrder{}
	mi := &file_api_proto_master_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendHeartbeatResponse_ChunkReplicationOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendHeartbeatResponse_ChunkReplicationOrder) ProtoMessage() {}

func (x *SendHeartbeatResponse_ChunkReplicationOrder) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendHeartbeatResponse_ChunkReplicationOrder.ProtoReflect.Descriptor instead.
func (*SendHeartbeatResponse_ChunkReplicationOrder) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{12, 0}
}

func (x *SendHeartbeatResponse_ChunkReplicationOrder) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

func (x *SendHeartbeatResponse_ChunkReplicationOrder) GetTargetServers() []string {
	if x != nil {
		return x.TargetServers
	}
	return nil
}

func (x *SendHeartbeatResponse_ChunkReplicationOrder) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type ListDirectoryResponse_DirectoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ino           uint64                 `protobuf:"varint,2,opt,name=ino,proto3" json:"ino,omitempty"`
	Type          uint32                 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"` // 0=file, 1=dir, 2=symlink
	Attributes    *common.FileAttributes `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryResponse_DirectoryEntry) Reset() {
	*x = ListDirectoryResponse_DirectoryEntry{}
	mi := &file_api_proto_master_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryResponse_DirectoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryResponse_DirectoryEntry) ProtoMessage() {}

func (x *ListDirectoryResponse_DirectoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryResponse_DirectoryEntry.ProtoReflect.Descriptor instead.
func (*ListDirectoryResponse_DirectoryEntry) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{18, 0}
}

func (x *ListDirectoryResponse_DirectoryEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListDirectoryResponse_DirectoryEntry) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *ListDirectoryResponse_DirectoryEntry) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ListDirectoryResponse_DirectoryEntry) GetAttributes() *common.FileAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type GetSystemStatsResponse_SystemStats struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	TotalChunkServers     uint32                 `protobuf:"varint,1,opt,name=total_chunk_servers,json=totalChunkServers,proto3" json:"total_chunk_servers,omitempty"`
	ActiveChunkServers    uint32                 `protobuf:"varint,2,opt,name=active_chunk_servers,json=activeChunkServers,proto3" json:"active_chunk_servers,omitempty"`
	TotalInodes           uint64                 `protobuf:"varint,3,opt,name=total_inodes,json=totalInodes,proto3" json:"total_inodes,omitempty"`
	UsedInodes            uint64                 `protobuf:"varint,4,opt,name=used_inodes,json=usedInodes,proto3" json:"used_inodes,omitempty"`
	FreeInodes            uint64                 `protobuf:"varint,5,opt,name=free_inodes,json=freeInodes,proto3" json:"free_inodes,omitempty"`
	TotalChunks           uint64                 `protobuf:"varint,6,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	TotalFiles            uint64                 `protobuf:"varint,7,opt,name=total_files,json=totalFiles,proto3" json:"total_files,omitempty"`
	TotalDirectories      uint64                 `protobuf:"varint,8,opt,name=total_directories,json=totalDirectories,proto3" json:"total_directories,omitempty"`
	TotalSpace            uint64                 `protobuf:"varint,9,opt,name=total_space,json=totalSpace,proto3" json:"total_space,omitempty"`
	UsedSpace             uint64                 `protobuf:"varint,10,opt,name=used_space,json=usedSpace,proto3" json:"used_space,omitempty"`
	AvailableSpace        uint64                 `protobuf:"varint,11,opt,name=available_space,json=availableSpace,proto3" json:"available_space,omitempty"`
	ReplicationFactor     float64                `protobuf:"fixed64,12,opt,name=replication_factor,json=replicationFactor,proto3" json:"replication_factor,omitempty"`
	UnderReplicatedChunks uint32                 `protobuf:"varint,13,opt,name=under_replicated_chunks,json=underReplicatedChunks,proto3" json:"under_replicated_chunks,omitempty"`
	OverReplicatedChunks  uint32                 `protobuf:"varint,14,opt,name=over_replicated_chunks,json=overReplicatedChunks,proto3" json:"over_replicated_chunks,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetSystemStatsResponse_SystemStats) Reset() {
	*x = GetSystemStatsResponse_SystemStats{}
	mi := &file_api_proto_master_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemStatsResponse_SystemStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemStatsResponse_SystemStats) ProtoMessage() {}

func (x *GetSystemStatsResponse_SystemStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_master_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemStatsResponse_SystemStats.ProtoReflect.Descriptor instead.
func (*GetSystemStatsResponse_SystemStats) Descriptor() ([]byte, []int) {
	return file_api_proto_master_proto_rawDescGZIP(), []int{24, 0}
}

func (x *GetSystemStatsResponse_SystemStats) GetTotalChunkServers() uint32 {
	if x != nil {
		return x.TotalChunkServers
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetActiveChunkServers() uint32 {
	if x != nil {
		return x.ActiveChunkServers
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetTotalInodes() uint64 {
	if x != nil {
		return x.TotalInodes
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetUsedInodes() uint64 {
	if x != nil {
		return x.UsedInodes
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetFreeInodes() uint64 {
	if x != nil {
		return x.FreeInodes
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetTotalChunks() uint64 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetTotalFiles() uint64 {
	if x != nil {
		return x.TotalFiles
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetTotalDirectories() uint64 {
	if x != nil {
		return x.TotalDirectories
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetTotalSpace() uint64 {
	if x != nil {
		return x.TotalSpace
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetUsedSpace() uint64 {
	if x != nil {
		return x.UsedSpace
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetAvailableSpace() uint64 {
	if x != nil {
		return x.AvailableSpace
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetReplicationFactor() float64 {
	if x != nil {
		return x.ReplicationFactor
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetUnderReplicatedChunks() uint32 {
	if x != nil {
		return x.UnderReplicatedChunks
	}
	return 0
}

func (x *GetSystemStatsResponse_SystemStats) GetOverReplicatedChunks() uint32 {
	if x != nil {
		return x.OverReplicatedChunks
	}
	return 0
}

var File_api_proto_master_proto protoreflect.FileDescriptor

var file_api_proto_master_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x64, 0x66, 0x73, 0x1a, 0x16, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x02, 0x0a, 0x05, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e,
	0x6f, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x78, 0x61, 0x74, 0x74, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x49, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x58, 0x61, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x78, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x64, 0x66, 0x73, 0x2e, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x58, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x42, 0x0a, 0x0d, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x0e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x66, 0x73,
	0x2e, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x53, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x22, 0x39, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x66, 0x73,
	0x2e, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x8d, 0x02,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x6d,
	0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x31, 0x0a, 0x09, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4d, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x02, 0x22, 0x37, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x52,
	0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x14, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x66, 0x73,
	0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x3f, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x22, 0xfe, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x66,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x1a, 0x96, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x30,
	0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xc9,
	0x04, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0x8e, 0x02,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x12,
	0x2d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x7a,
	0x0a, 0x0b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0xd9, 0x02, 0x0a, 0x15, 0x53,
	0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x74,
	0x6f, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x54, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x5f,
	0x0a, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x66, 0x73,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x11, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x36, 0x0a, 0x17, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x1a, 0x7d, 0x0a, 0x15, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e,
	0x6f, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x53, 0x0a,
	0x15, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x64, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x22, 0x65, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x22, 0x59, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x64, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x73, 0x22, 0x7f, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x69, 0x72, 0x5f, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64,
	0x69, 0x72, 0x49, 0x6e, 0x6f, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xb0, 0x02, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x1a, 0x7f, 0x0a, 0x0e, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x4d, 0x6f, 0x76,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x44, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x66,
	0x73, 0x2e, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x49, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x74,
	0x6f, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x54, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa5, 0x05, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a,
	0xcb, 0x04, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x49,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x65, 0x65,
	0x49, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x36, 0x0a, 0x17, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x15, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0x4a, 0x0a,
	0x0c, 0x53, 0x74, 0x61, 0x74, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d,
	0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x59, 0x0a, 0x0d, 0x53, 0x74, 0x61,
	0x74, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x78, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x6d, 0x61, 0x73, 0x6b, 0x22, 0xdb, 0x03, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x78, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x6c, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62,
	0x6c, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x64, 0x65, 0x76, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x72, 0x64, 0x65, 0x76, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x64, 0x65, 0x76, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x64, 0x65, 0x76, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x61, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x66,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x62, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x62, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x73, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6e, 0x73, 0x65, 0x63, 0x22, 0x37, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x63, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69,
	0x6e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x58, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x22, 0x29, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x58, 0x41, 0x74,
	0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x12, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x85, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6e, 0x65, 0x77,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x13, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x38, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x32, 0x88, 0x0b, 0x0a, 0x0d, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12,
	0x12, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x64, 0x66, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x19, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64,
	0x66, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x78, 0x12, 0x11, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x64, 0x66, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e,
	0x64, 0x66, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x15, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x4d,
	0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x12, 0x14, 0x2e, 0x64,
	0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x58, 0x41, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x53, 0x65, 0x74,
	0x58, 0x41, 0x74, 0x74, 0x72, 0x12, 0x14, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x58,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x66,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x12,
	0x15, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x58, 0x41, 0x74, 0x74, 0x72, 0x12, 0x17, 0x2e,
	0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x58, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x12, 0x19, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64,
	0x66, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e,
	0x64, 0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64,
	0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x13,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x19, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x1a, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x64,
	0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x65,
	0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x17, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x64, 0x66, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2e,
	0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x74, 0x74,
	0x61, 0x6d, 0x2d, 0x6c, 0x69, 0x2f, 0x64, 0x66, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_proto_master_proto_rawDescOnce sync.Once
	file_api_proto_master_proto_rawDescData []byte
)

func file_api_proto_master_proto_rawDescGZIP() []byte {
	file_api_proto_master_proto_rawDescOnce.Do(func() {
		file_api_proto_master_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_master_proto_rawDesc), len(file_api_proto_master_proto_rawDesc)))
	})
	return file_api_proto_master_proto_rawDescData
}

var file_api_proto_master_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_master_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_api_proto_master_proto_goTypes = []any{
	(CreateEntryRequest_EntryType)(0),                   // 0: dfs.CreateEntryRequest.EntryType
	(*Inode)(nil),                                       // 1: dfs.Inode
	(*LookupRequest)(nil),                               // 2: dfs.LookupRequest
	(*LookupResponse)(nil),                              // 3: dfs.LookupResponse
	(*GetAttributesRequest)(nil),                        // 4: dfs.GetAttributesRequest
	(*GetAttributesResponse)(nil),                       // 5: dfs.GetAttributesResponse
	(*CreateEntryRequest)(nil),                          // 6: dfs.CreateEntryRequest
	(*CreateEntryResponse)(nil),                         // 7: dfs.CreateEntryResponse
	(*AllocateChunkRequest)(nil),                        // 8: dfs.AllocateChunkRequest
	(*AllocateChunkResponse)(nil),                       // 9: dfs.AllocateChunkResponse
	(*GetChunkLocationsRequest)(nil),                    // 10: dfs.GetChunkLocationsRequest
	(*GetChunkLocationsResponse)(nil),                   // 11: dfs.GetChunkLocationsResponse
	(*SendHeartbeatRequest)(nil),                        // 12: dfs.SendHeartbeatRequest
	(*SendHeartbeatResponse)(nil),                       // 13: dfs.SendHeartbeatResponse
	(*SetAttributesRequest)(nil),                        // 14: dfs.SetAttributesRequest
	(*SetAttributesResponse)(nil),                       // 15: dfs.SetAttributesResponse
	(*DeleteEntryRequest)(nil),                          // 16: dfs.DeleteEntryRequest
	(*DeleteEntryResponse)(nil),                         // 17: dfs.DeleteEntryResponse
	(*ListDirectoryRequest)(nil),                        // 18: dfs.ListDirectoryRequest
	(*ListDirectoryResponse)(nil),                       // 19: dfs.ListDirectoryResponse
	(*MoveEntryRequest)(nil),                            // 20: dfs.MoveEntryRequest
	(*MoveEntryResponse)(nil),                           // 21: dfs.MoveEntryResponse
	(*RegisterChunkServerRequest)(nil),                  // 22: dfs.RegisterChunkServerRequest
	(*RegisterChunkServerResponse)(nil),                 // 23: dfs.RegisterChunkServerResponse
	(*GetSystemStatsRequest)(nil),                       // 24: dfs.GetSystemStatsRequest
	(*GetSystemStatsResponse)(nil),                      // 25: dfs.GetSystemStatsResponse
	(*StatxRequest)(nil),                                // 26: dfs.StatxRequest
	(*StatxResponse)(nil),                               // 27: dfs.StatxResponse
	(*StatxAttributes)(nil),                             // 28: dfs.StatxAttributes
	(*StatxTimestamp)(nil),                              // 29: dfs.StatxTimestamp
	(*GetXAttrRequest)(nil),                             // 30: dfs.GetXAttrRequest
	(*GetXAttrResponse)(nil),                            // 31: dfs.GetXAttrResponse
	(*SetXAttrRequest)(nil),                             // 32: dfs.SetXAttrRequest
	(*SetXAttrResponse)(nil),                            // 33: dfs.SetXAttrResponse
	(*ListXAttrRequest)(nil),                            // 34: dfs.ListXAttrRequest
	(*ListXAttrResponse)(nil),                           // 35: dfs.ListXAttrResponse
	(*RemoveXAttrRequest)(nil),                          // 36: dfs.RemoveXAttrRequest
	(*RemoveXAttrResponse)(nil),                         // 37: dfs.RemoveXAttrResponse
	(*GrantLeaseRequest)(nil),                           // 38: dfs.GrantLeaseRequest
	(*GrantLeaseResponse)(nil),                          // 39: dfs.GrantLeaseResponse
	(*RenewLeaseRequest)(nil),                           // 40: dfs.RenewLeaseRequest
	(*RenewLeaseResponse)(nil),                          // 41: dfs.RenewLeaseResponse
	(*RevokeLeaseRequest)(nil),                          // 42: dfs.RevokeLeaseRequest
	(*RevokeLeaseResponse)(nil),                         // 43: dfs.RevokeLeaseResponse
	(*GetLeaseInfoRequest)(nil),                         // 44: dfs.GetLeaseInfoRequest
	(*GetLeaseInfoResponse)(nil),                        // 45: dfs.GetLeaseInfoResponse
	nil,                                                 // 46: dfs.Inode.XattrsEntry
	nil,                                                 // 47: dfs.Inode.ChunkHandlesEntry
	(*GetChunkLocationsResponse_ChunkLocationInfo)(nil), // 48: dfs.GetChunkLocationsResponse.ChunkLocationInfo
	(*SendHeartbeatRequest_ServerStats)(nil),            // 49: dfs.SendHeartbeatRequest.ServerStats
	(*SendHeartbeatRequest_ChunkReport)(nil),            // 50: dfs.SendHeartbeatRequest.ChunkReport
	(*SendHeartbeatResponse_ChunkReplicationOrder)(nil), // 51: dfs.SendHeartbeatResponse.ChunkReplicationOrder
	(*ListDirectoryResponse_DirectoryEntry)(nil),        // 52: dfs.ListDirectoryResponse.DirectoryEntry
	(*GetSystemStatsResponse_SystemStats)(nil),          // 53: dfs.GetSystemStatsResponse.SystemStats
	(*common.FileAttributes)(nil),                       // 54: dfs.FileAttributes
	(*common.ChunkLocation)(nil),                        // 55: dfs.ChunkLocation
}
var file_api_proto_master_proto_depIdxs = []int32{
	54, // 0: dfs.Inode.attributes:type_name -> dfs.FileAttributes
	46, // 1: dfs.Inode.xattrs:type_name -> dfs.Inode.XattrsEntry
	47, // 2: dfs.Inode.chunk_handles:type_name -> dfs.Inode.ChunkHandlesEntry
	1,  // 3: dfs.LookupResponse.inode:type_name -> dfs.Inode
	1,  // 4: dfs.GetAttributesResponse.inode:type_name -> dfs.Inode
	0,  // 5: dfs.CreateEntryRequest.type:type_name -> dfs.CreateEntryRequest.EntryType
	54, // 6: dfs.CreateEntryRequest.attributes:type_name -> dfs.FileAttributes
	1,  // 7: dfs.CreateEntryResponse.inode:type_name -> dfs.Inode
	55, // 8: dfs.AllocateChunkResponse.locations:type_name -> dfs.ChunkLocation
	48, // 9: dfs.GetChunkLocationsResponse.chunks:type_name -> dfs.GetChunkLocationsResponse.ChunkLocationInfo
	49, // 10: dfs.SendHeartbeatRequest.stats:type_name -> dfs.SendHeartbeatRequest.ServerStats
	50, // 11: dfs.SendHeartbeatRequest.chunk_reports:type_name -> dfs.SendHeartbeatRequest.ChunkReport
	51, // 12: dfs.SendHeartbeatResponse.replication_orders:type_name -> dfs.SendHeartbeatResponse.ChunkReplicationOrder
	54, // 13: dfs.SetAttributesRequest.attributes:type_name -> dfs.FileAttributes
	54, // 14: dfs.SetAttributesResponse.new_attributes:type_name -> dfs.FileAttributes
	52, // 15: dfs.ListDirectoryResponse.entries:type_name -> dfs.ListDirectoryResponse.DirectoryEntry
	1,  // 16: dfs.MoveEntryResponse.updated_inode:type_name -> dfs.Inode
	53, // 17: dfs.GetSystemStatsResponse.stats:type_name -> dfs.GetSystemStatsResponse.SystemStats
	28, // 18: dfs.StatxResponse.attributes:type_name -> dfs.StatxAttributes
	29, // 19: dfs.StatxAttributes.atime:type_name -> dfs.StatxTimestamp
	29, // 20: dfs.StatxAttributes.mtime:type_name -> dfs.StatxTimestamp
	29, // 21: dfs.StatxAttributes.ctime:type_name -> dfs.StatxTimestamp
	29, // 22: dfs.StatxAttributes.btime:type_name -> dfs.StatxTimestamp
	55, // 23: dfs.GetChunkLocationsResponse.ChunkLocationInfo.locations:type_name -> dfs.ChunkLocation
	54, // 24: dfs.ListDirectoryResponse.DirectoryEntry.attributes:type_name -> dfs.FileAttributes
	2,  // 25: dfs.MasterService.Lookup:input_type -> dfs.LookupRequest
	4,  // 26: dfs.MasterService.GetAttributes:input_type -> dfs.GetAttributesRequest
	14, // 27: dfs.MasterService.SetAttributes:input_type -> dfs.SetAttributesRequest
	26, // 28: dfs.MasterService.Statx:input_type -> dfs.StatxRequest
	6,  // 29: dfs.MasterService.CreateEntry:input_type -> dfs.CreateEntryRequest
	16, // 30: dfs.MasterService.DeleteEntry:input_type -> dfs.DeleteEntryRequest
	18, // 31: dfs.MasterService.ListDirectory:input_type -> dfs.ListDirectoryRequest
	20, // 32: dfs.MasterService.MoveEntry:input_type -> dfs.MoveEntryRequest
	30, // 33: dfs.MasterService.GetXAttr:input_type -> dfs.GetXAttrRequest
	32, // 34: dfs.MasterService.SetXAttr:input_type -> dfs.SetXAttrRequest
	34, // 35: dfs.MasterService.ListXAttr:input_type -> dfs.ListXAttrRequest
	36, // 36: dfs.MasterService.RemoveXAttr:input_type -> dfs.RemoveXAttrRequest
	8,  // 37: dfs.MasterService.AllocateChunk:input_type -> dfs.AllocateChunkRequest
	10, // 38: dfs.MasterService.GetChunkLocations:input_type -> dfs.GetChunkLocationsRequest
	22, // 39: dfs.MasterService.RegisterChunkServer:input_type -> dfs.RegisterChunkServerRequest
	12, // 40: dfs.MasterService.SendHeartbeat:input_type -> dfs.SendHeartbeatRequest
	24, // 41: dfs.MasterService.GetSystemStats:input_type -> dfs.GetSystemStatsRequest
	38, // 42: dfs.MasterService.GrantLease:input_type -> dfs.GrantLeaseRequest
	40, // 43: dfs.MasterService.RenewLease:input_type -> dfs.RenewLeaseRequest
	42, // 44: dfs.MasterService.RevokeLease:input_type -> dfs.RevokeLeaseRequest
	44, // 45: dfs.MasterService.GetLeaseInfo:input_type -> dfs.GetLeaseInfoRequest
	3,  // 46: dfs.MasterService.Lookup:output_type -> dfs.LookupResponse
	5,  // 47: dfs.MasterService.GetAttributes:output_type -> dfs.GetAttributesResponse
	15, // 48: dfs.MasterService.SetAttributes:output_type -> dfs.SetAttributesResponse
	27, // 49: dfs.MasterService.Statx:output_type -> dfs.StatxResponse
	7,  // 50: dfs.MasterService.CreateEntry:output_type -> dfs.CreateEntryResponse
	17, // 51: dfs.MasterService.DeleteEntry:output_type -> dfs.DeleteEntryResponse
	19, // 52: dfs.MasterService.ListDirectory:output_type -> dfs.ListDirectoryResponse
	21, // 53: dfs.MasterService.MoveEntry:output_type -> dfs.MoveEntryResponse
	31, // 54: dfs.MasterService.GetXAttr:output_type -> dfs.GetXAttrResponse
	33, // 55: dfs.MasterService.SetXAttr:output_type -> dfs.SetXAttrResponse
	35, // 56: dfs.MasterService.ListXAttr:output_type -> dfs.ListXAttrResponse
	37, // 57: dfs.MasterService.RemoveXAttr:output_type -> dfs.RemoveXAttrResponse
	9,  // 58: dfs.MasterService.AllocateChunk:output_type -> dfs.AllocateChunkResponse
	11, // 59: dfs.MasterService.GetChunkLocations:output_type -> dfs.GetChunkLocationsResponse
	23, // 60: dfs.MasterService.RegisterChunkServer:output_type -> dfs.RegisterChunkServerResponse
	13, // 61: dfs.MasterService.SendHeartbeat:output_type -> dfs.SendHeartbeatResponse
	25, // 62: dfs.MasterService.GetSystemStats:output_type -> dfs.GetSystemStatsResponse
	39, // 63: dfs.MasterService.GrantLease:output_type -> dfs.GrantLeaseResponse
	41, // 64: dfs.MasterService.RenewLease:output_type -> dfs.RenewLeaseResponse
	43, // 65: dfs.MasterService.RevokeLease:output_type -> dfs.RevokeLeaseResponse
	45, // 66: dfs.MasterService.GetLeaseInfo:output_type -> dfs.GetLeaseInfoResponse
	46, // [46:67] is the sub-list for method output_type
	25, // [25:46] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_api_proto_master_proto_init() }
func file_api_proto_master_proto_init() {
	if File_api_proto_master_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_master_proto_rawDesc), len(file_api_proto_master_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_master_proto_goTypes,
		DependencyIndexes: file_api_proto_master_proto_depIdxs,
		EnumInfos:         file_api_proto_master_proto_enumTypes,
		MessageInfos:      file_api_proto_master_proto_msgTypes,
	}.Build()
	File_api_proto_master_proto = out.File
	file_api_proto_master_proto_goTypes = nil
	file_api_proto_master_proto_depIdxs = nil
}
